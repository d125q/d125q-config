#!/usr/bin/env zsh

read -r -d '' usage <<EOF
Usage: $( basename $0 ) [OPTION]... SERVICE_NAME [...]
Connect to an Oracle database identified by SERVICE_NAME.

Options:
    -u, -user, -username
        the database account username
            (default: whoami)
    -p, -pass, -password
        the database account password
            (default: pass Oracle/SERVICE_NAME/USERNAME)

Option parsing stops at '-' or '--'; any leftovers will be
passed over to sqlplus.
EOF

set -euo pipefail
set -o extendedglob
typeset -A opts
zparseopts -D -E -F -M -A opts -                \
           h help=h                             \
           u: user:=u username:=u               \
           p: pass:=p password:=p

if [[ -v opts[-h] ]] ; then
    echo $usage
    exit 0
fi

if [[ $# -lt 1 ]] ; then
    >&2 echo $usage
    return 1
fi

# Net service names are limited to ASCII alphanumeric characters and
# the underscore.
if [[ $1 == [a-zA-Z0-9_]## ]] ; then
    service_name=${(U)1}
    shift
    typeset -r service_name
else
    >&2 echo "Bad service name: $1"
    exit 2
fi

# Quoted identifier begins and ends with double quotation marks.
# They can contain anything besides double quotation marks and the
# null character.
# Unquoted identifiers begin with an alphabetic character and contain
# only alphanumeric characters as well as the underscore, dollar sign,
# and pound sign.
if [[ -v opts[-u] ]] ; then
    if [[ ${opts[-u]} =~ '^"([^"\0]+)"$' ]] ; then
        username=${match[1]}
    elif [[ ${opts[-u]} =~ '^[[:alpha:]][[:alnum:]_$#]*$' ]] ; then
        username=${(U)opts[-u]}
    else
        >&2 echo "Bad username: ${opts[-u]}"
        exit 2
    fi
else
    username=${(U)$( whoami )}
fi
typeset -r username

if [[ -v opts[-p] ]] ; then
    password=${opts[-p]}
else
    password=$( pass Oracle/$service_name/$username )
fi
typeset -r password

typeset -a sqlplusopts
while (( $# )) ; do
    sqlplusopt=$1
    shift
    if [[ $sqlplusopt = '-' || $sqlplusopt = '--' ]] ; then
        break
    fi
    sqlplusopts+=$sqlplusopt
done
sqlplusopts+=( "$@" )
typeset -r sqlplusopts

rlwrap sqlplus "${sqlplusopts[@]}" $username/$password@$service_name
